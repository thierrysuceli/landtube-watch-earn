# üöÄ Script de Deploy Autom√°tico - LandTube
# Execute este script para fazer deploy no GitHub Pages

Write-Host "==================================================" -ForegroundColor Cyan
Write-Host "  LANDTUBE - DEPLOY AUTOM√ÅTICO GITHUB PAGES" -ForegroundColor Yellow
Write-Host "==================================================" -ForegroundColor Cyan
Write-Host ""

# Verificar se est√° na pasta correta
if (!(Test-Path "vite.config.ts")) {
    Write-Host "‚ùå ERRO: Execute este script na pasta do projeto!" -ForegroundColor Red
    Write-Host "   cd c:\Users\silva\Downloads\landtube-watch-earn-main\landtube-watch-earn-main" -ForegroundColor Yellow
    exit 1
}

# Passo 1: Informa√ß√µes do usu√°rio
Write-Host "üìù PASSO 1: Configura√ß√£o" -ForegroundColor Green
Write-Host ""

$gitName = Read-Host "Digite seu nome (para Git)"
$gitEmail = Read-Host "Digite seu email (para Git)"
$githubUser = Read-Host "Digite seu usu√°rio do GitHub"
$repoName = "landtube-watch-earn"

Write-Host ""
Write-Host "‚úÖ Reposit√≥rio configurado: landtube-watch-earn" -ForegroundColor Green

Write-Host ""
Write-Host "‚öôÔ∏è  Configurando Git..." -ForegroundColor Yellow

git config --global user.name "$gitName"
git config --global user.email "$gitEmail"

# Passo 2: Confirma√ß√£o
Write-Host ""
Write-Host "üìù PASSO 2: Configura√ß√£o confirmada" -ForegroundColor Green
Write-Host "   Nome: $gitName" -ForegroundColor White
Write-Host "   Email: $gitEmail" -ForegroundColor White
Write-Host "   GitHub User: $githubUser" -ForegroundColor White
Write-Host "   Reposit√≥rio: landtube-watch-earn (j√° configurado)" -ForegroundColor White
Write-Host "   Base URL: /landtube-watch-earn/ (j√° configurado)" -ForegroundColor White
Write-Host ""

# Passo 3: Inicializar Git
Write-Host ""
Write-Host "üìù PASSO 3: Inicializando reposit√≥rio Git" -ForegroundColor Green

# Verificar se j√° tem .git
if (Test-Path ".git") {
    Write-Host "‚ö†Ô∏è  Reposit√≥rio Git j√° existe. Deseja reinicializar? (S/N)" -ForegroundColor Yellow
    $reinit = Read-Host
    if ($reinit -eq "S" -or $reinit -eq "s") {
        Remove-Item -Recurse -Force ".git"
        git init
        Write-Host "‚úÖ Git reinicializado" -ForegroundColor Green
    }
} else {
    git init
    Write-Host "‚úÖ Git inicializado" -ForegroundColor Green
}

# Passo 4: Adicionar arquivos
Write-Host ""
Write-Host "üìù PASSO 4: Adicionando arquivos" -ForegroundColor Green

git add .
git commit -m "Initial commit - LandTube Watch & Earn"
git branch -M main

Write-Host "‚úÖ Arquivos commitados" -ForegroundColor Green

# Passo 5: Conectar ao GitHub
Write-Host ""
Write-Host "üìù PASSO 5: Conectando ao GitHub" -ForegroundColor Green

# Remover remote se j√° existir
git remote remove origin 2>$null

$remoteUrl = "https://github.com/$githubUser/$repoName.git"
git remote add origin $remoteUrl

Write-Host "‚úÖ Conectado ao reposit√≥rio: $remoteUrl" -ForegroundColor Green

# Passo 6: Push para GitHub
Write-Host ""
Write-Host "üìù PASSO 6: Enviando c√≥digo para GitHub" -ForegroundColor Green
Write-Host "‚ö†Ô∏è  Se pedir senha, use um Personal Access Token!" -ForegroundColor Yellow
Write-Host ""

try {
    git push -u origin main
    Write-Host ""
    Write-Host "‚úÖ C√≥digo enviado com sucesso!" -ForegroundColor Green
} catch {
    Write-Host ""
    Write-Host "‚ö†Ô∏è  Erro ao fazer push. Voc√™ criou o reposit√≥rio no GitHub?" -ForegroundColor Yellow
    Write-Host "   1. Acesse: https://github.com/new" -ForegroundColor Cyan
    Write-Host "   2. Crie o reposit√≥rio: $repoName" -ForegroundColor Cyan
    Write-Host "   3. Execute novamente: git push -u origin main" -ForegroundColor Yellow
    exit 1
}

# Passo 7: Instru√ß√µes finais
Write-Host ""
Write-Host "==================================================" -ForegroundColor Cyan
Write-Host "  ‚úÖ DEPLOY CONFIGURADO COM SUCESSO!" -ForegroundColor Green
Write-Host "==================================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "üìã PR√ìXIMOS PASSOS:" -ForegroundColor Yellow
Write-Host ""
Write-Host "1. Acesse seu reposit√≥rio:" -ForegroundColor White
Write-Host "   https://github.com/$githubUser/$repoName" -ForegroundColor Cyan
Write-Host ""
Write-Host "2. V√° em Settings ‚Üí Pages" -ForegroundColor White
Write-Host ""
Write-Host "3. Em 'Source', selecione: GitHub Actions" -ForegroundColor White
Write-Host ""
Write-Host "4. Aguarde 2-3 minutos e acesse:" -ForegroundColor White
Write-Host "   https://$githubUser.github.io/$repoName/" -ForegroundColor Cyan
Write-Host ""
Write-Host "==================================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "üí° DICA: O deploy acontece automaticamente quando voc√™ fizer push!" -ForegroundColor Yellow
Write-Host ""
Write-Host "Para atualiza√ß√µes futuras:" -ForegroundColor White
Write-Host "   git add ." -ForegroundColor Gray
Write-Host "   git commit -m 'Descri√ß√£o da mudan√ßa'" -ForegroundColor Gray
Write-Host "   git push" -ForegroundColor Gray
Write-Host ""
Write-Host "Pressione Enter para sair..." -ForegroundColor Gray
Read-Host
